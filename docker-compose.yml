version: '3.8'

services:
  api:
    build:
      context: ./backend/humanization_service
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/humanization_service/api.env
    command: [ "python3", "/app/entrypoint_dev.py" ]
    ports:
      - "8000:8000"
    volumes:
      - ./backend/humanization_service:/app
    depends_on:
      - rabbitmq
      - feedback-postgres

  worker:
    build:
      context: ./backend/humanization_service
      dockerfile: Dockerfile.dev
    env_file:
      - ./backend/humanization_service/worker.env
    command: [ "python3", "/app/entrypoint_dev.py" ]
    depends_on:
      - api
      - rabbitmq
      - feedback-postgres
    volumes:
      - ./backend/humanization_service:/app

  rabbitmq:
    image: rabbitmq:3-management
    env_file:
      - ./backend/humanization_service/rabbitmq.env
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 5s
      timeout: 10s
      retries: 5
    ports:
      - "5672:5672"
      - "15672:15672"

  feedback-postgres:
    image: postgres:latest
    env_file:
      - ./backend/humanization_service/postgres.env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis-cache:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data:
